buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}
group = 'elastic'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

task buildDocker(type: Docker) {
  baseImage = 'elastic/sampleelasticsearchapp:latest'
  push = project.hasProperty('push')
  tag = 'elastic/sampleelasticsearchapp'
  addFile {
    from jar
    rename {'app.jar'}
  }
  entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
  // exposePort(8080)
}

buildDocker.dependsOn(build)
jar {
	baseName = 'sampleelasticsearchapp'
	version  =  '0.1.0'
}
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
    compile('org.apache.logging.log4j:log4j-api:2.8.1')
    compile('org.apache.logging.log4j:log4j-core:2.8.1')
	compile('org.elasticsearch.client:transport:5.2.2','org.elasticsearch:elasticsearch:5.2.2','com.google.code.gson:gson:2.8.0')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
